// <auto-generated />
using BurritoBoysApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BurritoBoysApi.Migrations
{
    [DbContext(typeof(BurritoBoysApiContext))]
    [Migration("20230301173120_AddInitial")]
    partial class AddInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BurritoBoysApi.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("SpotId")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("SpotId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            RatingId = 1,
                            Rate = 5,
                            SpotId = 1
                        },
                        new
                        {
                            RatingId = 2,
                            Rate = 4,
                            SpotId = 1
                        },
                        new
                        {
                            RatingId = 3,
                            Rate = 5,
                            SpotId = 1
                        },
                        new
                        {
                            RatingId = 4,
                            Rate = 4,
                            SpotId = 2
                        },
                        new
                        {
                            RatingId = 5,
                            Rate = 3,
                            SpotId = 2
                        },
                        new
                        {
                            RatingId = 6,
                            Rate = 3,
                            SpotId = 2
                        },
                        new
                        {
                            RatingId = 7,
                            Rate = 5,
                            SpotId = 3
                        },
                        new
                        {
                            RatingId = 8,
                            Rate = 5,
                            SpotId = 3
                        },
                        new
                        {
                            RatingId = 9,
                            Rate = 5,
                            SpotId = 3
                        },
                        new
                        {
                            RatingId = 10,
                            Rate = 4,
                            SpotId = 4
                        },
                        new
                        {
                            RatingId = 11,
                            Rate = 4,
                            SpotId = 4
                        },
                        new
                        {
                            RatingId = 12,
                            Rate = 5,
                            SpotId = 4
                        },
                        new
                        {
                            RatingId = 13,
                            Rate = 4,
                            SpotId = 5
                        },
                        new
                        {
                            RatingId = 14,
                            Rate = 4,
                            SpotId = 5
                        },
                        new
                        {
                            RatingId = 15,
                            Rate = 4,
                            SpotId = 5
                        });
                });

            modelBuilder.Entity("BurritoBoysApi.Models.Salsa", b =>
                {
                    b.Property<int>("SalsaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SpotId")
                        .HasColumnType("int");

                    b.HasKey("SalsaId");

                    b.HasIndex("SpotId");

                    b.ToTable("Salsas");

                    b.HasData(
                        new
                        {
                            SalsaId = 1,
                            Description = "Mild but delicious.",
                            Name = "Green Salsa",
                            SpotId = 1
                        },
                        new
                        {
                            SalsaId = 2,
                            Description = "Medium spicy and creamy..",
                            Name = "Avocado Salsa",
                            SpotId = 2
                        },
                        new
                        {
                            SalsaId = 3,
                            Description = "Smokey and spicy.",
                            Name = "Chipotle Salsa",
                            SpotId = 3
                        },
                        new
                        {
                            SalsaId = 4,
                            Description = "Spicy.",
                            Name = "Habenero Salsa",
                            SpotId = 4
                        },
                        new
                        {
                            SalsaId = 5,
                            Description = "Firey.",
                            Name = "Red Salsa",
                            SpotId = 5
                        });
                });

            modelBuilder.Entity("BurritoBoysApi.Models.Spot", b =>
                {
                    b.Property<int>("SpotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<double>("AverageRating")
                        .HasColumnType("double");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .HasColumnType("longtext");

                    b.HasKey("SpotId");

                    b.ToTable("Spots");

                    b.HasData(
                        new
                        {
                            SpotId = 1,
                            Address = "1122 S Maryland Pkwy suite 110",
                            AverageRating = 4.6600000000000001,
                            City = "Las Vegas",
                            Name = "Robertos",
                            State = "NV",
                            Website = "www.Robertos.com"
                        },
                        new
                        {
                            SpotId = 2,
                            Address = "707 NE Weidler St",
                            AverageRating = 3.3300000000000001,
                            City = "Portland",
                            Name = "Muchas Gracias",
                            State = "OR",
                            Website = "www.MuchasGracias.com"
                        },
                        new
                        {
                            SpotId = 3,
                            Address = "5745 NE Prescott St",
                            AverageRating = 5.0,
                            City = "Portland",
                            Name = "Pinches Burros",
                            State = "OR",
                            Website = "www.PinchesBurros.com"
                        },
                        new
                        {
                            SpotId = 4,
                            Address = "3503 N Mississippi Ave",
                            AverageRating = 4.3300000000000001,
                            City = "Portland",
                            Name = "King Burrito",
                            State = "OR",
                            Website = "www.KingBurrito.com"
                        },
                        new
                        {
                            SpotId = 5,
                            Address = "If you know, You know",
                            AverageRating = 4.0,
                            City = "Portland",
                            Name = "Los Francos",
                            State = "OR",
                            Website = "food"
                        });
                });

            modelBuilder.Entity("BurritoBoysApi.Models.Rating", b =>
                {
                    b.HasOne("BurritoBoysApi.Models.Spot", null)
                        .WithMany("Ratings")
                        .HasForeignKey("SpotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BurritoBoysApi.Models.Salsa", b =>
                {
                    b.HasOne("BurritoBoysApi.Models.Spot", null)
                        .WithMany("Salsas")
                        .HasForeignKey("SpotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BurritoBoysApi.Models.Spot", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("Salsas");
                });
#pragma warning restore 612, 618
        }
    }
}
